        -:    0:Source:/usr/include/c++/11/bits/stl_construct.h
        -:    0:Graph:/home/ioana/second_semester/oop/assignments/a6-913-Gabor-Ioana-1/cmake-build-debug-coverage/CMakeFiles/a6_913_Gabor_Ioana_1.dir/ui/ConsoleUI.cpp.gcno
        -:    0:Data:/home/ioana/second_semester/oop/assignments/a6-913-Gabor-Ioana-1/cmake-build-debug-coverage/CMakeFiles/a6_913_Gabor_Ioana_1.dir/ui/ConsoleUI.cpp.gcda
        -:    0:Runs:1
        -:    1:// nonstandard construct and destroy functions -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2021 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/*
        -:   26: *
        -:   27: * Copyright (c) 1994
        -:   28: * Hewlett-Packard Company
        -:   29: *
        -:   30: * Permission to use, copy, modify, distribute and sell this software
        -:   31: * and its documentation for any purpose is hereby granted without fee,
        -:   32: * provided that the above copyright notice appear in all copies and
        -:   33: * that both that copyright notice and this permission notice appear
        -:   34: * in supporting documentation.  Hewlett-Packard Company makes no
        -:   35: * representations about the suitability of this software for any
        -:   36: * purpose.  It is provided "as is" without express or implied warranty.
        -:   37: *
        -:   38: *
        -:   39: * Copyright (c) 1996,1997
        -:   40: * Silicon Graphics Computer Systems, Inc.
        -:   41: *
        -:   42: * Permission to use, copy, modify, distribute and sell this software
        -:   43: * and its documentation for any purpose is hereby granted without fee,
        -:   44: * provided that the above copyright notice appear in all copies and
        -:   45: * that both that copyright notice and this permission notice appear
        -:   46: * in supporting documentation.  Silicon Graphics makes no
        -:   47: * representations about the suitability of this software for any
        -:   48: * purpose.  It is provided "as is" without express or implied warranty.
        -:   49: */
        -:   50:
        -:   51:/** @file bits/stl_construct.h
        -:   52: *  This is an internal header file, included by other library headers.
        -:   53: *  Do not attempt to use it directly. @headername{memory}
        -:   54: */
        -:   55:
        -:   56:#ifndef _STL_CONSTRUCT_H
        -:   57:#define _STL_CONSTRUCT_H 1
        -:   58:
        -:   59:#include <new>
        -:   60:#include <bits/move.h>
        -:   61:#include <bits/stl_iterator_base_types.h> // for iterator_traits
        -:   62:#include <bits/stl_iterator_base_funcs.h> // for advance
        -:   63:
        -:   64:/* This file provides the C++17 functions std::destroy_at, std::destroy, and
        -:   65: * std::destroy_n, and the C++20 function std::construct_at.
        -:   66: * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
        -:   67: * which are defined in all standard modes and so can be used in C++98-14 code.
        -:   68: * The _Destroy functions will dispatch to destroy_at during constant
        -:   69: * evaluation, because calls to that function are intercepted by the compiler
        -:   70: * to allow use in constant expressions.
        -:   71: */
        -:   72:
        -:   73:namespace std _GLIBCXX_VISIBILITY(default)
        -:   74:{
        -:   75:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   76:
        -:   77:#if __cplusplus >= 201703L
        -:   78:  template <typename _Tp>
        -:   79:    _GLIBCXX20_CONSTEXPR inline void
        -:   80:    destroy_at(_Tp* __location)
        -:   81:    {
        -:   82:      if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
        -:   83:	{
        -:   84:	  for (auto& __x : *__location)
        -:   85:	    std::destroy_at(std::__addressof(__x));
        -:   86:	}
        -:   87:      else
        -:   88:	__location->~_Tp();
        -:   89:    }
        -:   90:
        -:   91:#if __cplusplus >= 202002L
        -:   92:  template<typename _Tp, typename... _Args>
        -:   93:    constexpr auto
        -:   94:    construct_at(_Tp* __location, _Args&&... __args)
        -:   95:    noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
        -:   96:    -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
        -:   97:    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
        -:   98:#endif // C++20
        -:   99:#endif// C++17
        -:  100:
        -:  101:  /**
        -:  102:   * Constructs an object in existing memory by invoking an allocated
        -:  103:   * object's constructor with an initializer.
        -:  104:   */
        -:  105:#if __cplusplus >= 201103L
        -:  106:  template<typename _Tp, typename... _Args>
        -:  107:    _GLIBCXX20_CONSTEXPR
        -:  108:    inline void
  232260*:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
  232260*:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
  232260*:  120:    }
------------------
_ZSt10_ConstructISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EJS7_EEvPT_DpOT0_:
function _ZSt10_ConstructISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EJS7_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  120:    }
------------------
_ZSt10_ConstructISt4pairIccEJS1_EEvPT_DpOT0_:
function _ZSt10_ConstructISt4pairIccEJS1_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
    #####:  120:    }
------------------
_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  120:    }
------------------
_ZSt10_ConstructISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EJRKS7_EEvPT_DpOT0_:
function _ZSt10_ConstructISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EJRKS7_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    $$$$$:  119-block  1
call    5 never executed
    #####:  120:    }
    %%%%%:  120-block  0
------------------
_ZSt10_ConstructINSt7__cxx1112regex_traitsIcE10_RegexMaskEJRKS3_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt7__cxx1112regex_traitsIcE10_RegexMaskEJRKS3_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
    #####:  120:    }
------------------
_ZSt10_ConstructISt4pairIccEJRKS1_EEvPT_DpOT0_:
function _ZSt10_ConstructISt4pairIccEJRKS1_EEvPT_DpOT0_ called 129918 returned 100% blocks executed 100%
   129918:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
   129918:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
   129918:  119-block  0
call    0 returned 129918
call    1 returned 129918
   129918:  120:    }
------------------
_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    $$$$$:  119-block  1
call    5 never executed
    #####:  120:    }
    %%%%%:  120-block  0
------------------
_ZSt10_ConstructINSt7__cxx1112regex_traitsIcE10_RegexMaskEJS3_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt7__cxx1112regex_traitsIcE10_RegexMaskEJS3_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
    #####:  120:    }
------------------
_ZSt10_ConstructISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEJSH_EEvPT_DpOT0_:
function _ZSt10_ConstructISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEJSH_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  120:    }
------------------
_ZSt10_ConstructINSt8__detail6_StateIcEEJRKS2_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt8__detail6_StateIcEEJRKS2_EEvPT_DpOT0_ called 65205 returned 100% blocks executed 83%
    65205:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    65205:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    65205:  119-block  0
call    0 returned 65205
call    1 returned 65205
call    2 returned 65205
branch  3 taken 65205 (fallthrough)
branch  4 taken 0 (throw)
    $$$$$:  119-block  1
call    5 never executed
    65205:  120:    }
    65205:  120-block  0
------------------
_ZSt10_ConstructINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEJRSC_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEJRSC_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
    #####:  120:    }
------------------
_ZSt10_ConstructISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiEJEEvPT_DpOT0_:
function _ZSt10_ConstructISt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiEJEEvPT_DpOT0_ called 35913 returned 100% blocks executed 100%
    35913:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    35913:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    35913:  119-block  0
call    0 returned 35913
    35913:  120:    }
------------------
_ZSt10_ConstructINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEJRKSC_EEvPT_DpOT0_:
function _ZSt10_ConstructINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEJRKSC_EEvPT_DpOT0_ called 1224 returned 100% blocks executed 100%
     1224:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
     1224:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
     1224:  119-block  0
call    0 returned 1224
call    1 returned 1224
     1224:  120:    }
------------------
_ZSt10_ConstructI5EventJRKS0_EEvPT_DpOT0_:
function _ZSt10_ConstructI5EventJRKS0_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    $$$$$:  119-block  1
call    5 never executed
    #####:  120:    }
    %%%%%:  120-block  0
------------------
_ZSt10_ConstructI5EventJRS0_EEvPT_DpOT0_:
function _ZSt10_ConstructI5EventJRS0_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
    #####:  109:    _Construct(_Tp* __p, _Args&&... __args)
        -:  110:    {
        -:  111:#if __cplusplus >= 202002L && __has_builtin(__builtin_is_constant_evaluated)
        -:  112:      if (__builtin_is_constant_evaluated())
        -:  113:	{
        -:  114:	  // Allow std::_Construct to be used in constant expressions.
        -:  115:	  std::construct_at(__p, std::forward<_Args>(__args)...);
        -:  116:	  return;
        -:  117:	}
        -:  118:#endif
    #####:  119:      ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...);
    %%%%%:  119-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    $$$$$:  119-block  1
call    5 never executed
    #####:  120:    }
    %%%%%:  120-block  0
------------------
        -:  121:#else
        -:  122:  template<typename _T1, typename _T2>
        -:  123:    inline void
        -:  124:    _Construct(_T1* __p, const _T2& __value)
        -:  125:    {
        -:  126:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  127:      // 402. wrong new expression in [some_]allocator::construct
        -:  128:      ::new(static_cast<void*>(__p)) _T1(__value);
        -:  129:    }
        -:  130:#endif
        -:  131:
        -:  132:  template<typename _T1>
        -:  133:    inline void
        -:  134:    _Construct_novalue(_T1* __p)
        -:  135:    { ::new(static_cast<void*>(__p)) _T1; }
        -:  136:
        -:  137:  template<typename _ForwardIterator>
        -:  138:    _GLIBCXX20_CONSTEXPR void
        -:  139:    _Destroy(_ForwardIterator __first, _ForwardIterator __last);
        -:  140:
        -:  141:  /**
        -:  142:   * Destroy the object pointed to by a pointer type.
        -:  143:   */
        -:  144:  template<typename _Tp>
        -:  145:    _GLIBCXX14_CONSTEXPR inline void
  101118*:  146:    _Destroy(_Tp* __pointer)
        -:  147:    {
        -:  148:#if __cplusplus > 201703L
        -:  149:      std::destroy_at(__pointer);
        -:  150:#else
  101118*:  151:      __pointer->~_Tp();
        -:  152:#endif
  101118*:  153:    }
------------------
_ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_:
function _ZSt8_DestroyISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvPT_ called 0 returned 0% blocks executed 0%
    #####:  146:    _Destroy(_Tp* __pointer)
        -:  147:    {
        -:  148:#if __cplusplus > 201703L
        -:  149:      std::destroy_at(__pointer);
        -:  150:#else
    #####:  151:      __pointer->~_Tp();
    %%%%%:  151-block  0
call    0 never executed
        -:  152:#endif
    #####:  153:    }
------------------
_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_:
function _ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ called 0 returned 0% blocks executed 0%
    #####:  146:    _Destroy(_Tp* __pointer)
        -:  147:    {
        -:  148:#if __cplusplus > 201703L
        -:  149:      std::destroy_at(__pointer);
        -:  150:#else
    #####:  151:      __pointer->~_Tp();
    %%%%%:  151-block  0
call    0 never executed
        -:  152:#endif
    #####:  153:    }
------------------
_ZSt8_DestroyINSt8__detail6_StateIcEEEvPT_:
function _ZSt8_DestroyINSt8__detail6_StateIcEEEvPT_ called 101118 returned 100% blocks executed 100%
   101118:  146:    _Destroy(_Tp* __pointer)
        -:  147:    {
        -:  148:#if __cplusplus > 201703L
        -:  149:      std::destroy_at(__pointer);
        -:  150:#else
   101118:  151:      __pointer->~_Tp();
   101118:  151-block  0
call    0 returned 101118
        -:  152:#endif
   101118:  153:    }
------------------
_ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_:
function _ZSt8_DestroyISt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvPT_ called 0 returned 0% blocks executed 0%
    #####:  146:    _Destroy(_Tp* __pointer)
        -:  147:    {
        -:  148:#if __cplusplus > 201703L
        -:  149:      std::destroy_at(__pointer);
        -:  150:#else
    #####:  151:      __pointer->~_Tp();
    %%%%%:  151-block  0
call    0 never executed
        -:  152:#endif
    #####:  153:    }
------------------
_ZSt8_DestroyI5EventEvPT_:
function _ZSt8_DestroyI5EventEvPT_ called 0 returned 0% blocks executed 0%
    #####:  146:    _Destroy(_Tp* __pointer)
        -:  147:    {
        -:  148:#if __cplusplus > 201703L
        -:  149:      std::destroy_at(__pointer);
        -:  150:#else
    #####:  151:      __pointer->~_Tp();
    %%%%%:  151-block  0
call    0 never executed
        -:  152:#endif
    #####:  153:    }
------------------
        -:  154:
        -:  155:  template<bool>
        -:  156:    struct _Destroy_aux
        -:  157:    {
        -:  158:      template<typename _ForwardIterator>
        -:  159:	static _GLIBCXX20_CONSTEXPR void
   47142*:  160:	__destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  161:	{
  148260*:  162:	  for (; __first != __last; ++__first)
  101118*:  163:	    std::_Destroy(std::__addressof(*__first));
   47142*:  164:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEEvT_SB_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EEEvT_SB_ called 0 returned 0% blocks executed 0%
    #####:  160:	__destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  161:	{
    #####:  162:	  for (; __first != __last; ++__first)
    %%%%%:  162-block  0
    %%%%%:  162-block  1
branch  0 never executed
branch  1 never executed
    #####:  163:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
    #####:  164:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ called 45924 returned 100% blocks executed 50%
    45924:  160:	__destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  161:	{
   45924*:  162:	  for (; __first != __last; ++__first)
    45924:  162-block  0
    45924:  162-block  1
branch  0 taken 0
branch  1 taken 45924 (fallthrough)
    #####:  163:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
    45924:  164:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt8__detail6_StateIcEEEEvT_S6_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPNSt8__detail6_StateIcEEEEvT_S6_ called 1218 returned 100% blocks executed 100%
     1218:  160:	__destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  161:	{
   102336:  162:	  for (; __first != __last; ++__first)
     1218:  162-block  0
   102336:  162-block  1
branch  0 taken 101118
branch  1 taken 1218 (fallthrough)
   101118:  163:	    std::_Destroy(std::__addressof(*__first));
   101118:  163-block  0
call    0 returned 101118
call    1 returned 101118
     1218:  164:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS4_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISG_EEEEEvT_SL_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS4_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISG_EEEEEvT_SL_ called 0 returned 0% blocks executed 0%
    #####:  160:	__destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  161:	{
    #####:  162:	  for (; __first != __last; ++__first)
    %%%%%:  162-block  0
    %%%%%:  162-block  1
branch  0 never executed
branch  1 never executed
    #####:  163:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
    #####:  164:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP5EventSt6vectorIS4_SaIS4_EEEEEEvT_SA_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP5EventSt6vectorIS4_SaIS4_EEEEEEvT_SA_ called 0 returned 0% blocks executed 0%
    #####:  160:	__destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  161:	{
    #####:  162:	  for (; __first != __last; ++__first)
    %%%%%:  162-block  0
call    0 never executed
    %%%%%:  162-block  1
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  163:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  164:	}
------------------
_ZNSt12_Destroy_auxILb0EE9__destroyIP5EventEEvT_S4_:
function _ZNSt12_Destroy_auxILb0EE9__destroyIP5EventEEvT_S4_ called 0 returned 0% blocks executed 0%
    #####:  160:	__destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  161:	{
    #####:  162:	  for (; __first != __last; ++__first)
    %%%%%:  162-block  0
    %%%%%:  162-block  1
branch  0 never executed
branch  1 never executed
    #####:  163:	    std::_Destroy(std::__addressof(*__first));
    %%%%%:  163-block  0
call    0 never executed
call    1 never executed
    #####:  164:	}
------------------
        -:  165:    };
        -:  166:
        -:  167:  template<>
        -:  168:    struct _Destroy_aux<true>
        -:  169:    {
        -:  170:      template<typename _ForwardIterator>
        -:  171:        static void
   246549:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPNSt7__cxx1112regex_traitsIcE10_RegexMaskEEEvT_S7_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPNSt7__cxx1112regex_traitsIcE10_RegexMaskEEEvT_S7_ called 45924 returned 100% blocks executed 100%
    45924:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIccEEEvT_S5_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIccEEEvT_S5_ called 45924 returned 100% blocks executed 100%
    45924:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_ called 153822 returned 100% blocks executed 100%
   153822:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx119sub_matchINS3_IPKcNS4_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISE_SaISE_EEEEEEvT_SK_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx119sub_matchINS3_IPKcNS4_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISE_SaISE_EEEEEEvT_SK_ called 136 returned 100% blocks executed 100%
      136:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiEEEvT_SG_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiEEEvT_SG_ called 123 returned 100% blocks executed 100%
      123:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEEEvT_SG_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEEEvT_SG_ called 497 returned 100% blocks executed 100%
      497:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_:
function _ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_ called 123 returned 100% blocks executed 100%
      123:  172:        __destroy(_ForwardIterator, _ForwardIterator) { }
------------------
        -:  173:    };
        -:  174:
        -:  175:  /**
        -:  176:   * Destroy a range of objects.  If the value_type of the object has
        -:  177:   * a trivial destructor, the compiler should optimize all of this
        -:  178:   * away, otherwise the objects' destructors must be invoked.
        -:  179:   */
        -:  180:  template<typename _ForwardIterator>
        -:  181:    _GLIBCXX20_CONSTEXPR inline void
  293691*:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
  293691*:  196:	__destroy(__first, __last);
  293691*:  197:    }
------------------
_ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_:
function _ZSt8_DestroyIPSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_EEvT_S9_ called 0 returned 0% blocks executed 0%
    #####:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  196:	__destroy(__first, __last);
    %%%%%:  196-block  0
call    0 never executed
    #####:  197:    }
------------------
_ZSt8_DestroyIPNSt7__cxx1112regex_traitsIcE10_RegexMaskEEvT_S5_:
function _ZSt8_DestroyIPNSt7__cxx1112regex_traitsIcE10_RegexMaskEEvT_S5_ called 45924 returned 100% blocks executed 100%
    45924:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    45924:  196:	__destroy(__first, __last);
    45924:  196-block  0
call    0 returned 45924
    45924:  197:    }
------------------
_ZSt8_DestroyIPSt4pairIccEEvT_S3_:
function _ZSt8_DestroyIPSt4pairIccEEvT_S3_ called 45924 returned 100% blocks executed 100%
    45924:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    45924:  196:	__destroy(__first, __last);
    45924:  196-block  0
call    0 returned 45924
    45924:  197:    }
------------------
_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_:
function _ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ called 45924 returned 100% blocks executed 100%
    45924:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    45924:  196:	__destroy(__first, __last);
    45924:  196-block  0
call    0 returned 45924
    45924:  197:    }
------------------
_ZSt8_DestroyIPcEvT_S1_:
function _ZSt8_DestroyIPcEvT_S1_ called 153822 returned 100% blocks executed 100%
   153822:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
   153822:  196:	__destroy(__first, __last);
   153822:  196-block  0
call    0 returned 153822
   153822:  197:    }
------------------
_ZSt8_DestroyIPNSt8__detail6_StateIcEEEvT_S4_:
function _ZSt8_DestroyIPNSt8__detail6_StateIcEEEvT_S4_ called 1218 returned 100% blocks executed 100%
     1218:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
     1218:  196:	__destroy(__first, __last);
     1218:  196-block  0
call    0 returned 1218
     1218:  197:    }
------------------
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx119sub_matchINS1_IPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISC_SaISC_EEEEEvT_SI_:
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx119sub_matchINS1_IPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESt6vectorISC_SaISC_EEEEEvT_SI_ called 136 returned 100% blocks executed 100%
      136:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
      136:  196:	__destroy(__first, __last);
      136:  196-block  0
call    0 returned 136
      136:  197:    }
------------------
_ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvT_SJ_:
function _ZSt8_DestroyIPSt4pairIlSt6vectorINSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS2_12basic_stringIcSt11char_traitsIcESaIcEEEEEEESaISE_EEEEvT_SJ_ called 0 returned 0% blocks executed 0%
    #####:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  196:	__destroy(__first, __last);
    %%%%%:  196-block  0
call    0 never executed
    #####:  197:    }
------------------
_ZSt8_DestroyIPSt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiEEvT_SE_:
function _ZSt8_DestroyIPSt4pairIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEiEEvT_SE_ called 123 returned 100% blocks executed 100%
      123:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
      123:  196:	__destroy(__first, __last);
      123:  196-block  0
call    0 returned 123
      123:  197:    }
------------------
_ZSt8_DestroyIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEEvT_SE_:
function _ZSt8_DestroyIPNSt7__cxx119sub_matchIN9__gnu_cxx17__normal_iteratorIPKcNS0_12basic_stringIcSt11char_traitsIcESaIcEEEEEEEEvT_SE_ called 497 returned 100% blocks executed 100%
      497:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
      497:  196:	__destroy(__first, __last);
      497:  196-block  0
call    0 returned 497
      497:  197:    }
------------------
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP5EventSt6vectorIS2_SaIS2_EEEEEvT_S8_:
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP5EventSt6vectorIS2_SaIS2_EEEEEvT_S8_ called 0 returned 0% blocks executed 0%
    #####:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  196:	__destroy(__first, __last);
    %%%%%:  196-block  0
call    0 never executed
    #####:  197:    }
------------------
_ZSt8_DestroyIP5EventEvT_S2_:
function _ZSt8_DestroyIP5EventEvT_S2_ called 0 returned 0% blocks executed 0%
    #####:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
    #####:  196:	__destroy(__first, __last);
    %%%%%:  196-block  0
call    0 never executed
    #####:  197:    }
------------------
_ZSt8_DestroyIPmEvT_S1_:
function _ZSt8_DestroyIPmEvT_S1_ called 123 returned 100% blocks executed 100%
      123:  182:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  183:    {
        -:  184:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  185:                       _Value_type;
        -:  186:#if __cplusplus >= 201103L
        -:  187:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  188:      static_assert(is_destructible<_Value_type>::value,
        -:  189:		    "value type is destructible");
        -:  190:#endif
        -:  191:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  192:      if (std::is_constant_evaluated())
        -:  193:	return _Destroy_aux<false>::__destroy(__first, __last);
        -:  194:#endif
        -:  195:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
      123:  196:	__destroy(__first, __last);
      123:  196-block  0
call    0 returned 123
      123:  197:    }
------------------
        -:  198:
        -:  199:  template<bool>
        -:  200:    struct _Destroy_n_aux
        -:  201:    {
        -:  202:      template<typename _ForwardIterator, typename _Size>
        -:  203:	static _GLIBCXX20_CONSTEXPR _ForwardIterator
        -:  204:	__destroy_n(_ForwardIterator __first, _Size __count)
        -:  205:	{
        -:  206:	  for (; __count > 0; (void)++__first, --__count)
        -:  207:	    std::_Destroy(std::__addressof(*__first));
        -:  208:	  return __first;
        -:  209:	}
        -:  210:    };
        -:  211:
        -:  212:  template<>
        -:  213:    struct _Destroy_n_aux<true>
        -:  214:    {
        -:  215:      template<typename _ForwardIterator, typename _Size>
        -:  216:        static _ForwardIterator
        -:  217:        __destroy_n(_ForwardIterator __first, _Size __count)
        -:  218:	{
        -:  219:	  std::advance(__first, __count);
        -:  220:	  return __first;
        -:  221:	}
        -:  222:    };
        -:  223:
        -:  224:  /**
        -:  225:   * Destroy a range of objects.  If the value_type of the object has
        -:  226:   * a trivial destructor, the compiler should optimize all of this
        -:  227:   * away, otherwise the objects' destructors must be invoked.
        -:  228:   */
        -:  229:  template<typename _ForwardIterator, typename _Size>
        -:  230:    _GLIBCXX20_CONSTEXPR inline _ForwardIterator
        -:  231:    _Destroy_n(_ForwardIterator __first, _Size __count)
        -:  232:    {
        -:  233:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  234:                       _Value_type;
        -:  235:#if __cplusplus >= 201103L
        -:  236:      // A deleted destructor is trivial, this ensures we reject such types:
        -:  237:      static_assert(is_destructible<_Value_type>::value,
        -:  238:		    "value type is destructible");
        -:  239:#endif
        -:  240:#if __cplusplus > 201703L && defined __cpp_lib_is_constant_evaluated
        -:  241:      if (std::is_constant_evaluated())
        -:  242:	return _Destroy_n_aux<false>::__destroy_n(__first, __count);
        -:  243:#endif
        -:  244:      return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
        -:  245:	__destroy_n(__first, __count);
        -:  246:    }
        -:  247:
        -:  248:#if __cplusplus >= 201703L
        -:  249:  template <typename _ForwardIterator>
        -:  250:    _GLIBCXX20_CONSTEXPR inline void
        -:  251:    destroy(_ForwardIterator __first, _ForwardIterator __last)
        -:  252:    {
        -:  253:      std::_Destroy(__first, __last);
        -:  254:    }
        -:  255:
        -:  256:  template <typename _ForwardIterator, typename _Size>
        -:  257:    _GLIBCXX20_CONSTEXPR inline _ForwardIterator
        -:  258:    destroy_n(_ForwardIterator __first, _Size __count)
        -:  259:    {
        -:  260:      return std::_Destroy_n(__first, __count);
        -:  261:    }
        -:  262:#endif // C++17
        -:  263:
        -:  264:_GLIBCXX_END_NAMESPACE_VERSION
        -:  265:} // namespace std
        -:  266:
        -:  267:#endif /* _STL_CONSTRUCT_H */
